package com.ccr.chance.services;

import java.time.Instant;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.ccr.chance.dto.CompanyDTO;
import com.ccr.chance.entities.Company;
import com.ccr.chance.entities.Defiance;
import com.ccr.chance.repositories.CompanyRepository;

@Service
public class DefianceService {
	@Autowired
	private DefianceRepository repository;
	
	@Autowired
	private CompanyRepository companyRepository;
	
	@Transactional(readOnly = true)
	public List<DefianceDTO> findAll(){
		
		List<Defiance> list = repository.findOrdersWithProducts();
		return list.stream().map(x -> new DefianceDTO(x)).collect(Collectors.toList());
	}
	
	@Transactional
	public DefianceDTO insert(DefianceDTO dto) {
		Defiance Defiance = new Order(null, dto.getAddress(), dto.getLatitude(), dto.getLongitude(), Instant.now(), OrderStatus.PENDING);
		for (CompanyDTO p : dto.getCompany()) {
			Company company = companyRepository.getOne(p.getId());
			defiance.getCompany().add(company);
		}
		defiance = repository.save(defiance);
		return new DefianceDTO(defiance);
	}
	
}

